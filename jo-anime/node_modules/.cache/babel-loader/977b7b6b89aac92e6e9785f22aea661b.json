{"ast":null,"code":"// Given an input value, returns a node structure and places a \n// HTML node element into the DOM\nlet id = 0;\nconst SVG = \"https://www.w3.org/2000/svg\";\nconst PATH = \"M53 74.6504C75.05 74.6504 76.4 74.6504 98 74.6504M98 74.6504L87.5 64M98 74.6504L87.5 87\"; // Could use something more proper, eg Uuid?\n\nfunction genid() {\n  id += 1;\n  return id;\n} // helper function which sets multiple attributes at once\n\n\nfunction setAttributes(elements, attributes) {\n  for (const key in attributes) {\n    elements.setAttribute(key, attributes[key]);\n  }\n}\n\nfunction createNode(input) {\n  const canvas = document.querySelector(\"#canvas\");\n  const id = genid(); // Create SVG node\n\n  const newNode = document.createElementNS(SVG, \"svg\");\n  const nodeTarget = `node-${id}`;\n  const nodeAttributes = {\n    \"width\": \"200px\",\n    \"height\": \"100px\",\n    \"id\": nodeTarget\n  };\n  setAttributes(newNode, nodeAttributes); // Create text that will go into SVG\n\n  const nodeValue = document.createElementNS(SVG, 'text');\n  nodeValue.innerHTML = input; // Create Arrow Path that will go into SVG\n\n  const newPath = document.createElementNS(SVG, 'path');\n  const pathTarget = `path-${id}`;\n  const pathAttributes = {\n    \"d\": PATH,\n    \"id\": pathTarget\n  };\n  setAttributes(newPath, pathAttributes);\n  newNode.appendChild(nodeValue);\n  newNode.appendChild(newPath);\n  canvas.appendChild(newNode);\n  return {\n    id,\n    nodeTarget,\n    pathTarget\n  };\n}\n\nexport default createNode;","map":{"version":3,"sources":["/Users/joe/Desktop/structs/Structs.sh/jo-anime/src/createNode.js"],"names":["id","SVG","PATH","genid","setAttributes","elements","attributes","key","setAttribute","createNode","input","canvas","document","querySelector","newNode","createElementNS","nodeTarget","nodeAttributes","nodeValue","innerHTML","newPath","pathTarget","pathAttributes","appendChild"],"mappings":"AAAA;AACA;AACA,IAAIA,EAAE,GAAG,CAAT;AACA,MAAMC,GAAG,GAAG,6BAAZ;AACA,MAAMC,IAAI,GAAG,yFAAb,C,CAEA;;AACA,SAASC,KAAT,GAAiB;AACbH,EAAAA,EAAE,IAAI,CAAN;AACA,SAAOA,EAAP;AACH,C,CAED;;;AACA,SAASI,aAAT,CAAuBC,QAAvB,EAAiCC,UAAjC,EAA6C;AACzC,OAAI,MAAMC,GAAV,IAAiBD,UAAjB,EAA6B;AACzBD,IAAAA,QAAQ,CAACG,YAAT,CAAsBD,GAAtB,EAA2BD,UAAU,CAACC,GAAD,CAArC;AACH;AACJ;;AAED,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AACA,QAAMb,EAAE,GAAGG,KAAK,EAAhB,CAFuB,CAIvB;;AACA,QAAMW,OAAO,GAAGF,QAAQ,CAACG,eAAT,CAAyBd,GAAzB,EAA8B,KAA9B,CAAhB;AACA,QAAMe,UAAU,GAAI,QAAOhB,EAAG,EAA9B;AACA,QAAMiB,cAAc,GAAG;AACnB,aAAU,OADS;AAEnB,cAAW,OAFQ;AAGnB,UAAOD;AAHY,GAAvB;AAKAZ,EAAAA,aAAa,CAACU,OAAD,EAAUG,cAAV,CAAb,CAZuB,CAcvB;;AACA,QAAMC,SAAS,GAAGN,QAAQ,CAACG,eAAT,CAAyBd,GAAzB,EAA8B,MAA9B,CAAlB;AACAiB,EAAAA,SAAS,CAACC,SAAV,GAAsBT,KAAtB,CAhBuB,CAkBvB;;AACA,QAAMU,OAAO,GAAGR,QAAQ,CAACG,eAAT,CAAyBd,GAAzB,EAA8B,MAA9B,CAAhB;AACA,QAAMoB,UAAU,GAAI,QAAOrB,EAAG,EAA9B;AACA,QAAMsB,cAAc,GAAG;AACnB,SAAMpB,IADa;AAEnB,UAAOmB;AAFY,GAAvB;AAIAjB,EAAAA,aAAa,CAACgB,OAAD,EAAUE,cAAV,CAAb;AAGAR,EAAAA,OAAO,CAACS,WAAR,CAAoBL,SAApB;AACAJ,EAAAA,OAAO,CAACS,WAAR,CAAoBH,OAApB;AACAT,EAAAA,MAAM,CAACY,WAAP,CAAmBT,OAAnB;AACA,SAAO;AACHd,IAAAA,EADG;AAEHgB,IAAAA,UAFG;AAGHK,IAAAA;AAHG,GAAP;AAKH;;AAGD,eAAeZ,UAAf","sourcesContent":["// Given an input value, returns a node structure and places a \n// HTML node element into the DOM\nlet id = 0\nconst SVG = \"https://www.w3.org/2000/svg\"\nconst PATH = \"M53 74.6504C75.05 74.6504 76.4 74.6504 98 74.6504M98 74.6504L87.5 64M98 74.6504L87.5 87\"\n\n// Could use something more proper, eg Uuid?\nfunction genid() {\n    id += 1;\n    return id;\n}\n\n// helper function which sets multiple attributes at once\nfunction setAttributes(elements, attributes) {\n    for(const key in attributes) {\n        elements.setAttribute(key, attributes[key])\n    }\n}\n\nfunction createNode(input) {\n    const canvas = document.querySelector(\"#canvas\")\n    const id = genid();\n\n    // Create SVG node\n    const newNode = document.createElementNS(SVG, \"svg\")\n    const nodeTarget = `node-${id}`\n    const nodeAttributes = {\n        \"width\" : \"200px\",\n        \"height\" : \"100px\",\n        \"id\" : nodeTarget\n    }\n    setAttributes(newNode, nodeAttributes)\n\n    // Create text that will go into SVG\n    const nodeValue = document.createElementNS(SVG, 'text')\n    nodeValue.innerHTML = input\n\n    // Create Arrow Path that will go into SVG\n    const newPath = document.createElementNS(SVG, 'path')\n    const pathTarget = `path-${id}`\n    const pathAttributes = {\n        \"d\" : PATH,\n        \"id\" : pathTarget\n    }\n    setAttributes(newPath, pathAttributes)\n\n\n    newNode.appendChild(nodeValue);\n    newNode.appendChild(newPath)\n    canvas.appendChild(newNode);\n    return {\n        id,\n        nodeTarget,\n        pathTarget\n    }\n}\n\n\nexport default createNode;"]},"metadata":{},"sourceType":"module"}