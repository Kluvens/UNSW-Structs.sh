{"ast":null,"code":"// Given an input value, returns a node structure and places a \n// HTML node element into the DOM\nlet id = 0;\nSVG = \"https://www.w3.org/2000/svg\"; // Could use something more proper, eg Uuid?\n\nfunction genid() {\n  id += 1;\n  return id;\n} // helper function which sets multiple attributes at once\n\n\nfunction setAttributes(elements, attributes) {\n  for (const key in attributes) {\n    elements.setAttribute(key, attributes[key]);\n  }\n}\n\nfunction createNode(input) {\n  const canvas = document.querySelector(\"#canvas\");\n  const id = genid(); // Create SVG node\n\n  const newNode = document.createElementNS(SVG, \"svg\");\n  const nodeAttributes = {\n    \"width\": \"200px\",\n    \"height\": \"100px\"\n  };\n  setAttributes(newNode, attributes); // Create text that will go into SVG\n\n  const nodeValue = document.createElementNS(SVG, 'text');\n  nodeValue.innerHTML = input;\n  newNode.classList.add(\"node\");\n  newNode.setAttribute(\"id\", `node-${id}`);\n  newNode.innerHTML = input;\n  canvas.appendChild(newNode);\n  return id;\n}\n\nexport default createNode;","map":{"version":3,"sources":["/Users/joe/Desktop/structs/Structs.sh/jo-anime/src/createNode.js"],"names":["id","SVG","genid","setAttributes","elements","attributes","key","setAttribute","createNode","input","canvas","document","querySelector","newNode","createElementNS","nodeAttributes","nodeValue","innerHTML","classList","add","appendChild"],"mappings":"AAAA;AACA;AACA,IAAIA,EAAE,GAAG,CAAT;AACAC,GAAG,GAAG,6BAAN,C,CAEA;;AACA,SAASC,KAAT,GAAiB;AACbF,EAAAA,EAAE,IAAI,CAAN;AACA,SAAOA,EAAP;AACH,C,CAED;;;AACA,SAASG,aAAT,CAAuBC,QAAvB,EAAiCC,UAAjC,EAA6C;AACzC,OAAI,MAAMC,GAAV,IAAiBD,UAAjB,EAA6B;AACzBD,IAAAA,QAAQ,CAACG,YAAT,CAAsBD,GAAtB,EAA2BD,UAAU,CAACC,GAAD,CAArC;AACH;AACJ;;AAED,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AACA,QAAMZ,EAAE,GAAGE,KAAK,EAAhB,CAFuB,CAIvB;;AACA,QAAMW,OAAO,GAAGF,QAAQ,CAACG,eAAT,CAAyBb,GAAzB,EAA8B,KAA9B,CAAhB;AACA,QAAMc,cAAc,GAAG;AACnB,aAAU,OADS;AAEnB,cAAW;AAFQ,GAAvB;AAIAZ,EAAAA,aAAa,CAACU,OAAD,EAAUR,UAAV,CAAb,CAVuB,CAYvB;;AACA,QAAMW,SAAS,GAAGL,QAAQ,CAACG,eAAT,CAAyBb,GAAzB,EAA8B,MAA9B,CAAlB;AACAe,EAAAA,SAAS,CAACC,SAAV,GAAsBR,KAAtB;AAGAI,EAAAA,OAAO,CAACK,SAAR,CAAkBC,GAAlB,CAAsB,MAAtB;AACAN,EAAAA,OAAO,CAACN,YAAR,CAAqB,IAArB,EAA4B,QAAOP,EAAG,EAAtC;AACAa,EAAAA,OAAO,CAACI,SAAR,GAAoBR,KAApB;AACAC,EAAAA,MAAM,CAACU,WAAP,CAAmBP,OAAnB;AACA,SAAOb,EAAP;AACH;;AAGD,eAAeQ,UAAf","sourcesContent":["// Given an input value, returns a node structure and places a \n// HTML node element into the DOM\nlet id = 0\nSVG = \"https://www.w3.org/2000/svg\"\n\n// Could use something more proper, eg Uuid?\nfunction genid() {\n    id += 1;\n    return id;\n}\n\n// helper function which sets multiple attributes at once\nfunction setAttributes(elements, attributes) {\n    for(const key in attributes) {\n        elements.setAttribute(key, attributes[key])\n    }\n}\n\nfunction createNode(input) {\n    const canvas = document.querySelector(\"#canvas\")\n    const id = genid();\n\n    // Create SVG node\n    const newNode = document.createElementNS(SVG, \"svg\")\n    const nodeAttributes = {\n        \"width\" : \"200px\",\n        \"height\" : \"100px\"\n    }\n    setAttributes(newNode, attributes)\n\n    // Create text that will go into SVG\n    const nodeValue = document.createElementNS(SVG, 'text')\n    nodeValue.innerHTML = input\n\n\n    newNode.classList.add(\"node\")\n    newNode.setAttribute(\"id\", `node-${id}`)\n    newNode.innerHTML = input\n    canvas.appendChild(newNode);\n    return id;\n}\n\n\nexport default createNode;"]},"metadata":{},"sourceType":"module"}