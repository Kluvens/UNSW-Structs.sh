{"ast":null,"code":"import anime from 'animejs';\n\nconst initialise = () => {\n  const canvas = document.querySelector(\"#canvas\");\n  const button = document.querySelector(\"#appendButton\");\n  const deleteButton = document.querySelector(\"#deleteButton\");\n  let nodes = [];\n  let id = 0;\n\n  function genid() {\n    id += 1;\n    return id;\n  }\n\n  function createNode(input) {\n    const id = genid();\n    let newNode = document.createElement(\"div\");\n    newNode.classList.add(\"node\");\n    newNode.setAttribute(\"id\", `node-${id}`);\n    newNode.innerHTML = input;\n    canvas.appendChild(newNode);\n    return id;\n  }\n\n  function createSequence(input) {\n    let currentTimeline = anime.timeline({\n      duration: 250,\n      easing: 'easeOutExpo'\n    });\n    currentTimeline.add({\n      targets: `#node-${input}`,\n      opacity: 1\n    });\n    currentTimeline.add({\n      targets: \"#current\",\n      opacity: 1\n    });\n    nodes.forEach((node, idx) => {\n      currentTimeline.add({\n        targets: \"#current\",\n        translateX: idx * 100\n      });\n    });\n    currentTimeline.add({\n      targets: `#node-${input}`,\n      translateX: (nodes.length - 3) * 100 - 40,\n      translateY: 200\n    });\n    currentTimeline.add({\n      targets: \"#current\",\n      opacity: 0\n    });\n    currentTimeline.add({\n      targets: \"#current\",\n      translateX: 0\n    });\n  }\n\n  function createDeleteNodeSequence(shiftedNodes, deletedNode, input) {\n    let currentTimeline = anime.timeline({\n      duration: 250,\n      easing: 'easeOutExpo'\n    });\n    currentTimeline.add({\n      targets: \"#current\",\n      opacity: 1\n    });\n\n    for (let i = 0; i < input; i++) {\n      currentTimeline.add({\n        targets: \"#current\",\n        translateX: i * 100\n      });\n    }\n\n    const current = document.querySelector(\"#current\");\n    const deletedDOM = document.querySelector(`#node-${deletedNode.key}`);\n    currentTimeline.add({\n      targets: [current, deletedDOM],\n      opacity: 0\n    });\n    const elements = shiftedNodes.map(node => {\n      return `#node-${node.key}`;\n    });\n    document.querySelectorAll(elements);\n    currentTimeline.add({\n      targets: elements,\n      translateX: '-=100',\n      complete: () => deleteNode(deletedNode)\n    });\n    currentTimeline.add({\n      targets: \"#current\",\n      translateX: 0\n    });\n  }\n\n  function deleteNode(node) {\n    const child = document.querySelector(`#node-${node.key}`);\n    canvas.removeChild(child);\n  }\n\n  function handleClick(e) {\n    e.preventDefault();\n    const input = document.querySelector(\"#appendValue\").value;\n    const ref = createNode(input);\n    nodes.push({\n      value: input,\n      key: ref\n    });\n    createSequence(ref);\n  }\n\n  function handleDeleteClick(e) {\n    e.preventDefault();\n    const input = document.querySelector(\"#appendValue\").value;\n    const shiftedNodes = nodes.slice(input);\n    const deletedNode = shiftedNodes.shift();\n    nodes.splice(input, 1);\n    createDeleteNodeSequence(shiftedNodes, deletedNode, input);\n  }\n\n  button.addEventListener('click', handleClick);\n  deleteButton.addEventListener('click', handleDeleteClick);\n  alert('Intialising');\n};\n\nexport default initialise;","map":{"version":3,"sources":["/Users/joe/Desktop/structs/Structs.sh/jo-anime/src/Landing.js"],"names":["anime","initialise","canvas","document","querySelector","button","deleteButton","nodes","id","genid","createNode","input","newNode","createElement","classList","add","setAttribute","innerHTML","appendChild","createSequence","currentTimeline","timeline","duration","easing","targets","opacity","forEach","node","idx","translateX","length","translateY","createDeleteNodeSequence","shiftedNodes","deletedNode","i","current","deletedDOM","key","elements","map","querySelectorAll","complete","deleteNode","child","removeChild","handleClick","e","preventDefault","value","ref","push","handleDeleteClick","slice","shift","splice","addEventListener","alert"],"mappings":"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","sourcesContent":["\nimport anime from 'animejs';\n\n\nconst initialise = () => {\n\n    const canvas = document.querySelector(\"#canvas\")\n    const button = document.querySelector(\"#appendButton\")\n    const deleteButton = document.querySelector(\"#deleteButton\")\n    let nodes = []\n    let id = 0\n\n    function genid() {\n        id += 1;\n        return id;\n    }\n\n\n    function createNode(input) {\n        const id = genid();\n        let newNode = document.createElement(\"div\");\n        newNode.classList.add(\"node\")\n        newNode.setAttribute(\"id\", `node-${id}`)\n        newNode.innerHTML = input\n        canvas.appendChild(newNode);\n        return id;\n    }\n\n\n    function createSequence(input) {\n        let currentTimeline = anime.timeline({\n            duration: 250,\n            easing: 'easeOutExpo'\n        })\n        currentTimeline.add({\n            targets: `#node-${input}`,\n            opacity: 1\n        })\n        currentTimeline.add({\n            targets: \"#current\",\n            opacity: 1\n        })\n        nodes.forEach((node, idx) => {\n            currentTimeline.add({\n                targets: \"#current\",\n                translateX: idx * 100\n            })\n        })\n        currentTimeline.add({\n            targets: `#node-${input}`,\n            translateX: (nodes.length - 3) * 100 - 40,\n            translateY: 200\n        })\n\n        currentTimeline.add({\n            targets: \"#current\",\n            opacity: 0\n        })\n        currentTimeline.add({\n            targets: \"#current\",\n            translateX: 0\n        })\n\n    }\n\n    function createDeleteNodeSequence(shiftedNodes, deletedNode, input) {\n        let currentTimeline = anime.timeline({\n            duration: 250,\n            easing: 'easeOutExpo'\n        })\n        currentTimeline.add({\n            targets: \"#current\",\n            opacity: 1\n        })\n        for (let i = 0; i < input; i++) {\n            currentTimeline.add({\n                targets: \"#current\",\n                translateX: i * 100\n            })\n        }\n        const current = document.querySelector(\"#current\")\n        const deletedDOM = document.querySelector(`#node-${deletedNode.key}`)\n        currentTimeline.add({\n            targets: [current, deletedDOM],\n            opacity: 0\n        })\n        const elements = shiftedNodes.map(node => {\n            return `#node-${node.key}`\n        })\n        document.querySelectorAll(elements)\n        currentTimeline.add({\n            targets: elements,\n            translateX: '-=100',\n            complete: () => deleteNode(deletedNode)\n        })\n        currentTimeline.add({\n            targets: \"#current\",\n            translateX: 0\n        })\n    }\n\n    function deleteNode(node) {\n        const child = document.querySelector(`#node-${node.key}`)\n        canvas.removeChild(child);\n    }\n\n    function handleClick(e) {\n        e.preventDefault();\n        const input = document.querySelector(\"#appendValue\").value;\n        const ref = createNode(input);\n        nodes.push({ value: input, key: ref });\n        createSequence(ref);\n    }\n\n    function handleDeleteClick(e) {\n        e.preventDefault();\n        const input = document.querySelector(\"#appendValue\").value;\n        const shiftedNodes = nodes.slice(input);\n        const deletedNode = shiftedNodes.shift();\n        nodes.splice(input, 1)\n        createDeleteNodeSequence(shiftedNodes, deletedNode, input);\n    }\n\n    button.addEventListener('click', handleClick)\n    deleteButton.addEventListener('click', handleDeleteClick)\n\n    alert('Intialising');\n}\n\nexport default initialise;\n"]},"metadata":{},"sourceType":"module"}