{"ast":null,"code":"// Given an input value, returns a node structure and places a \n// HTML node element into the DOM\nlet id = 0; // Could use something more proper, eg Uuid?\n\nfunction genid() {\n  id += 1;\n  return id;\n} // helper function which sets multiple attributes at once\n\n\nfunction setAttributes(elements, attributes) {\n  for (const key in attributes) {\n    elements.setAttribute(key, attributes[key]);\n  }\n}\n\nfunction createNode(input) {\n  const canvas = document.querySelector(\"#canvas\");\n  const id = genid(); // Create SVG node\n\n  const newNode = document.createElementNS(SVG, \"svg\");\n  const nodeAttributes = {\n    \"width\": \"200px\",\n    \"height\": \"100px\",\n    \"id\": `node-${id}`\n  };\n  setAttributes(newNode, attributes); // Create text that will go into SVG\n\n  const nodeValue = document.createElementNS(SVG, 'text');\n  nodeValue.innerHTML = input; // Create Arrow Path that will go into SVG\n\n  const newPath = document.createElementNS(SVG, 'path');\n  const pathAttributes = {\n    \"d\": PATH,\n    \"id\": `path-${id}`\n  };\n  setAttributes(newPath, pathAttributes);\n  canvas.appendChild(newNode);\n  return newNode;\n}\n\nexport default createNode;","map":{"version":3,"sources":["/Users/joe/Desktop/structs/Structs.sh/jo-anime/src/createNode.js"],"names":["id","genid","setAttributes","elements","attributes","key","setAttribute","createNode","input","canvas","document","querySelector","newNode","createElementNS","SVG","nodeAttributes","nodeValue","innerHTML","newPath","pathAttributes","PATH","appendChild"],"mappings":"AAAA;AACA;AAEA,IAAIA,EAAE,GAAG,CAAT,C,CACA;;AACA,SAASC,KAAT,GAAiB;AACbD,EAAAA,EAAE,IAAI,CAAN;AACA,SAAOA,EAAP;AACH,C,CAED;;;AACA,SAASE,aAAT,CAAuBC,QAAvB,EAAiCC,UAAjC,EAA6C;AACzC,OAAI,MAAMC,GAAV,IAAiBD,UAAjB,EAA6B;AACzBD,IAAAA,QAAQ,CAACG,YAAT,CAAsBD,GAAtB,EAA2BD,UAAU,CAACC,GAAD,CAArC;AACH;AACJ;;AAED,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AAEA,QAAMX,EAAE,GAAGC,KAAK,EAAhB,CAHuB,CAKvB;;AACA,QAAMW,OAAO,GAAGF,QAAQ,CAACG,eAAT,CAAyBC,GAAzB,EAA8B,KAA9B,CAAhB;AACA,QAAMC,cAAc,GAAG;AACnB,aAAU,OADS;AAEnB,cAAW,OAFQ;AAGnB,UAAQ,QAAOf,EAAG;AAHC,GAAvB;AAKAE,EAAAA,aAAa,CAACU,OAAD,EAAUR,UAAV,CAAb,CAZuB,CAcvB;;AACA,QAAMY,SAAS,GAAGN,QAAQ,CAACG,eAAT,CAAyBC,GAAzB,EAA8B,MAA9B,CAAlB;AACAE,EAAAA,SAAS,CAACC,SAAV,GAAsBT,KAAtB,CAhBuB,CAkBvB;;AACA,QAAMU,OAAO,GAAGR,QAAQ,CAACG,eAAT,CAAyBC,GAAzB,EAA8B,MAA9B,CAAhB;AACA,QAAMK,cAAc,GAAG;AACnB,SAAMC,IADa;AAEnB,UAAQ,QAAOpB,EAAG;AAFC,GAAvB;AAIAE,EAAAA,aAAa,CAACgB,OAAD,EAAUC,cAAV,CAAb;AAIAV,EAAAA,MAAM,CAACY,WAAP,CAAmBT,OAAnB;AACA,SAAOA,OAAP;AACH;;AAGD,eAAeL,UAAf","sourcesContent":["// Given an input value, returns a node structure and places a \n// HTML node element into the DOM\n\nlet id = 0 ;\n// Could use something more proper, eg Uuid?\nfunction genid() {\n    id += 1;\n    return id;\n}\n\n// helper function which sets multiple attributes at once\nfunction setAttributes(elements, attributes) {\n    for(const key in attributes) {\n        elements.setAttribute(key, attributes[key])\n    }\n}\n\nfunction createNode(input) {\n    const canvas = document.querySelector(\"#canvas\")\n    \n    const id = genid();\n\n    // Create SVG node\n    const newNode = document.createElementNS(SVG, \"svg\")\n    const nodeAttributes = {\n        \"width\" : \"200px\",\n        \"height\" : \"100px\",\n        \"id\" : `node-${id}`\n    }\n    setAttributes(newNode, attributes)\n\n    // Create text that will go into SVG\n    const nodeValue = document.createElementNS(SVG, 'text')\n    nodeValue.innerHTML = input\n\n    // Create Arrow Path that will go into SVG\n    const newPath = document.createElementNS(SVG, 'path')\n    const pathAttributes = {\n        \"d\" : PATH,\n        \"id\" : `path-${id}`\n    }\n    setAttributes(newPath, pathAttributes)\n\n\n\n    canvas.appendChild(newNode);\n    return newNode;\n}\n\n\nexport default createNode;"]},"metadata":{},"sourceType":"module"}