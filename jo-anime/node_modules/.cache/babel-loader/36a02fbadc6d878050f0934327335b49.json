{"ast":null,"code":"// Given an input value, returns a node structure and places a \n// HTML node element into the DOM\nlet id = 0;\nconst SVG = \"http://www.w3.org/2000/svg\";\nconst PATH = \"M53 74.6504C75.05 74.6504 76.4 74.6504 98 74.6504M98 74.6504L87.5 64M98 74.6504L87.5 87\"; // Could use something more proper, eg Uuid?\n\nfunction genid() {\n  id += 1;\n  return id;\n} // helper function which sets multiple attributes at once\n\n\nfunction setAttributes(elements, attributes) {\n  for (const key in attributes) {\n    elements.setAttribute(key, attributes[key]);\n  }\n}\n\nfunction createNode(input) {\n  const canvas = document.querySelector(\"#canvas\");\n  const id = genid(); // Create SVG node\n\n  const newNode = document.createElementNS(SVG, \"svg\");\n  const nodeTarget = `node-${id}`;\n  const nodeAttributes = {\n    \"width\": \"200\",\n    \"height\": \"100\",\n    \"viewBox\": \"0 0 200 100\",\n    \"id\": nodeTarget,\n    \"class\": \"node\"\n  };\n  setAttributes(newNode, nodeAttributes); // Node which is represented as an svg, we can change this to whatever svg we like\n\n  const nodeShape = document.createElementNS(SVG, 'rect');\n  const shapeAttributes = {\n    \"x\": \"1.5\",\n    \"y\": \"51.5\",\n    \"width\": \"47\",\n    \"height\": \"47\",\n    \"rx\": \"13.5\",\n    \"stroke\": \"black\",\n    \"stroke-width\": \"3\",\n    \"fill\": \"white\"\n  };\n  setAttributes(nodeShape, shapeAttributes); // Create text that will go into SVG\n\n  const nodeValue = document.createElementNS(SVG, 'text'); // Some issues relating to centering the text in the nodes, should find a better...\n\n  const textAttributes = {\n    \"font-size\": \"16\",\n    \"x\": \"8%\",\n    \"y\": \"80%\"\n  };\n  setAttributes(nodeValue, textAttributes);\n  nodeValue.innerHTML = input; // Create Arrow Path that will go into SVG\n\n  const newPath = document.createElementNS(SVG, 'path');\n  const pathTarget = `path-${id}`;\n  const pathAttributes = {\n    \"d\": PATH,\n    \"id\": pathTarget,\n    \"stroke-width\": \"3\",\n    \"stroke\": \"black\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    \"class\": \"path\"\n  };\n  setAttributes(newPath, pathAttributes); // Attach all the elements together\n\n  newNode.appendChild(nodeShape);\n  newNode.appendChild(nodeValue);\n  newNode.appendChild(newPath);\n  canvas.appendChild(newNode);\n  return {\n    id,\n    nodeTarget: \"#\" + nodeTarget,\n    pathTarget: \"#\" + pathTarget\n  };\n}\n\nexport default createNode;","map":{"version":3,"sources":["/Users/joe/Desktop/structs/Structs.sh/jo-anime/src/createNode.js"],"names":["id","SVG","PATH","genid","setAttributes","elements","attributes","key","setAttribute","createNode","input","canvas","document","querySelector","newNode","createElementNS","nodeTarget","nodeAttributes","nodeShape","shapeAttributes","nodeValue","textAttributes","innerHTML","newPath","pathTarget","pathAttributes","appendChild"],"mappings":"AAAA;AACA;AACA,IAAIA,EAAE,GAAG,CAAT;AACA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,MAAMC,IAAI,GAAG,yFAAb,C,CAEA;;AACA,SAASC,KAAT,GAAiB;AACbH,EAAAA,EAAE,IAAI,CAAN;AACA,SAAOA,EAAP;AACH,C,CAED;;;AACA,SAASI,aAAT,CAAuBC,QAAvB,EAAiCC,UAAjC,EAA6C;AACzC,OAAI,MAAMC,GAAV,IAAiBD,UAAjB,EAA6B;AACzBD,IAAAA,QAAQ,CAACG,YAAT,CAAsBD,GAAtB,EAA2BD,UAAU,CAACC,GAAD,CAArC;AACH;AACJ;;AAED,SAASE,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AACA,QAAMb,EAAE,GAAGG,KAAK,EAAhB,CAFuB,CAIvB;;AACA,QAAMW,OAAO,GAAGF,QAAQ,CAACG,eAAT,CAAyBd,GAAzB,EAA8B,KAA9B,CAAhB;AACA,QAAMe,UAAU,GAAI,QAAOhB,EAAG,EAA9B;AACA,QAAMiB,cAAc,GAAG;AACnB,aAAU,KADS;AAEnB,cAAW,KAFQ;AAGnB,eAAW,aAHQ;AAInB,UAAOD,UAJY;AAKnB,aAAU;AALS,GAAvB;AAQAZ,EAAAA,aAAa,CAACU,OAAD,EAAUG,cAAV,CAAb,CAfuB,CAiBvB;;AACA,QAAMC,SAAS,GAAGN,QAAQ,CAACG,eAAT,CAAyBd,GAAzB,EAA8B,MAA9B,CAAlB;AACA,QAAMkB,eAAe,GAAG;AACpB,SAAM,KADc;AAEpB,SAAM,MAFc;AAGpB,aAAU,IAHU;AAIpB,cAAW,IAJS;AAKpB,UAAO,MALa;AAMpB,cAAW,OANS;AAOpB,oBAAiB,GAPG;AAQpB,YAAS;AARW,GAAxB;AAUAf,EAAAA,aAAa,CAACc,SAAD,EAAYC,eAAZ,CAAb,CA7BuB,CA+BvB;;AACA,QAAMC,SAAS,GAAGR,QAAQ,CAACG,eAAT,CAAyBd,GAAzB,EAA8B,MAA9B,CAAlB,CAhCuB,CAiCvB;;AACA,QAAMoB,cAAc,GAAG;AACnB,iBAAc,IADK;AAEnB,SAAK,IAFc;AAGnB,SAAM;AAHa,GAAvB;AAKAjB,EAAAA,aAAa,CAACgB,SAAD,EAAYC,cAAZ,CAAb;AACAD,EAAAA,SAAS,CAACE,SAAV,GAAsBZ,KAAtB,CAxCuB,CA0CvB;;AACA,QAAMa,OAAO,GAAGX,QAAQ,CAACG,eAAT,CAAyBd,GAAzB,EAA8B,MAA9B,CAAhB;AACA,QAAMuB,UAAU,GAAI,QAAOxB,EAAG,EAA9B;AACA,QAAMyB,cAAc,GAAG;AACnB,SAAMvB,IADa;AAEnB,UAAOsB,UAFY;AAGnB,oBAAiB,GAHE;AAInB,cAAW,OAJQ;AAKnB,sBAAmB,OALA;AAMnB,uBAAoB,OAND;AAOnB,aAAU;AAPS,GAAvB;AASApB,EAAAA,aAAa,CAACmB,OAAD,EAAUE,cAAV,CAAb,CAtDuB,CAwDvB;;AACAX,EAAAA,OAAO,CAACY,WAAR,CAAoBR,SAApB;AACAJ,EAAAA,OAAO,CAACY,WAAR,CAAoBN,SAApB;AACAN,EAAAA,OAAO,CAACY,WAAR,CAAoBH,OAApB;AACAZ,EAAAA,MAAM,CAACe,WAAP,CAAmBZ,OAAnB;AACA,SAAO;AACHd,IAAAA,EADG;AAEHgB,IAAAA,UAAU,EAAE,MAAMA,UAFf;AAGHQ,IAAAA,UAAU,EAAE,MAAMA;AAHf,GAAP;AAKH;;AAGD,eAAef,UAAf","sourcesContent":["// Given an input value, returns a node structure and places a \n// HTML node element into the DOM\nlet id = 0\nconst SVG = \"http://www.w3.org/2000/svg\"\n\nconst PATH = \"M53 74.6504C75.05 74.6504 76.4 74.6504 98 74.6504M98 74.6504L87.5 64M98 74.6504L87.5 87\"\n\n// Could use something more proper, eg Uuid?\nfunction genid() {\n    id += 1;\n    return id;\n}\n\n// helper function which sets multiple attributes at once\nfunction setAttributes(elements, attributes) {\n    for(const key in attributes) {\n        elements.setAttribute(key, attributes[key])\n    }\n}\n\nfunction createNode(input) {\n    const canvas = document.querySelector(\"#canvas\")\n    const id = genid();\n\n    // Create SVG node\n    const newNode = document.createElementNS(SVG, \"svg\")\n    const nodeTarget = `node-${id}`\n    const nodeAttributes = {\n        \"width\" : \"200\",\n        \"height\" : \"100\",\n        \"viewBox\": \"0 0 200 100\",\n        \"id\" : nodeTarget,\n        \"class\" : \"node\"\n\n    }\n    setAttributes(newNode, nodeAttributes)\n\n    // Node which is represented as an svg, we can change this to whatever svg we like\n    const nodeShape = document.createElementNS(SVG, 'rect')\n    const shapeAttributes = {\n        \"x\" : \"1.5\",\n        \"y\" : \"51.5\",\n        \"width\" : \"47\",\n        \"height\" : \"47\",\n        \"rx\" : \"13.5\",\n        \"stroke\" : \"black\",\n        \"stroke-width\" : \"3\",\n        \"fill\" : \"white\"\n    }\n    setAttributes(nodeShape, shapeAttributes)\n\n    // Create text that will go into SVG\n    const nodeValue = document.createElementNS(SVG, 'text')\n    // Some issues relating to centering the text in the nodes, should find a better...\n    const textAttributes = {\n        \"font-size\" : \"16\",\n        \"x\": \"8%\",\n        \"y\" : \"80%\"\n    }\n    setAttributes(nodeValue, textAttributes)\n    nodeValue.innerHTML = input\n\n    // Create Arrow Path that will go into SVG\n    const newPath = document.createElementNS(SVG, 'path')\n    const pathTarget = `path-${id}`\n    const pathAttributes = {\n        \"d\" : PATH,\n        \"id\" : pathTarget,\n        \"stroke-width\" : \"3\",\n        \"stroke\" : \"black\",\n        \"stroke-linecap\" : \"round\",\n        \"stroke-linejoin\" : \"round\",\n        \"class\" : \"path\"\n    }\n    setAttributes(newPath, pathAttributes)\n\n    // Attach all the elements together\n    newNode.appendChild(nodeShape);\n    newNode.appendChild(nodeValue);\n    newNode.appendChild(newPath)\n    canvas.appendChild(newNode);\n    return {\n        id,\n        nodeTarget: \"#\" + nodeTarget,\n        pathTarget: \"#\" + pathTarget\n    }\n}\n\n\nexport default createNode;"]},"metadata":{},"sourceType":"module"}