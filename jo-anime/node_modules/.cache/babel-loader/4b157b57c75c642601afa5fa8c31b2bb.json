{"ast":null,"code":"import createNode from './createNode';\nimport createSequence from './createSequence';\nimport runSequence from './runSequence';\n\nconst initialise = () => {\n  const button = document.querySelector(\"#appendButton\");\n  const deleteButton = document.querySelector(\"#deleteButton\");\n  const nodes = [];\n  const animationHistory = []; // Node Structure:\n  // {\n  //     id: Number,\n  //     nodeTaget: String,\n  //     pathTarget: String\n  // }\n\n  function handleClick(e) {\n    e.preventDefault();\n    const input = document.querySelector(\"#appendValue\").value;\n    const newNode = createNode(input); // Logic of action reflects the javascript implementation\n\n    nodes.push(newNode);\n    const sequence = createSequence({\n      newNode,\n      nodes\n    }, 'append');\n    const timeline = runSequence(sequence);\n    animationHistory.push(timeline);\n  }\n\n  function handleDeleteClick(e) {\n    e.preventDefault();\n    const index = document.querySelector(\"#appendValue\").value; // Finds the nodes that need to be shifted, \n\n    const shiftedNodes = nodes.slice(index);\n    const deletedNode = shiftedNodes.shift(); // Deleted node at index input\n\n    nodes.splice(index, 1);\n    let prevNode = nodes[index];\n\n    if (index !== 0) {\n      const prevNode = nodes[index - 1];\n    }\n\n    const sequence = createSequence({\n      index,\n      deletedNode,\n      shiftedNodes,\n      prevNode\n    }, \"deleteByIndex\");\n    const timeline = runSequence(sequence);\n    animationHistory.push(timeline);\n  } // function deleteNode(node) {\n  //     const child = document.querySelector(`#node-${node.key}`)\n  //     canvas.removeChild(child);\n  // }\n\n\n  button.addEventListener('click', handleClick);\n  deleteButton.addEventListener('click', handleDeleteClick);\n};\n\nexport default initialise;","map":{"version":3,"sources":["/Users/joe/Desktop/structs/Structs.sh/jo-anime/src/Landing.js"],"names":["createNode","createSequence","runSequence","initialise","button","document","querySelector","deleteButton","nodes","animationHistory","handleClick","e","preventDefault","input","value","newNode","push","sequence","timeline","handleDeleteClick","index","shiftedNodes","slice","deletedNode","shift","splice","prevNode","addEventListener"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAIA,MAAMC,UAAU,GAAG,MAAM;AAErB,QAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAf;AACA,QAAMC,YAAY,GAAGF,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAArB;AACA,QAAME,KAAK,GAAG,EAAd;AACA,QAAMC,gBAAgB,GAAG,EAAzB,CALqB,CAQrB;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASC,WAAT,CAAqBC,CAArB,EAAwB;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,KAAK,GAAGR,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCQ,KAArD;AACA,UAAMC,OAAO,GAAGf,UAAU,CAACa,KAAD,CAA1B,CAHoB,CAIpB;;AACAL,IAAAA,KAAK,CAACQ,IAAN,CAAWD,OAAX;AAEA,UAAME,QAAQ,GAAGhB,cAAc,CAAC;AAACc,MAAAA,OAAD;AAAUP,MAAAA;AAAV,KAAD,EAAmB,QAAnB,CAA/B;AAEA,UAAMU,QAAQ,GAAGhB,WAAW,CAACe,QAAD,CAA5B;AACAR,IAAAA,gBAAgB,CAACO,IAAjB,CAAsBE,QAAtB;AACH;;AAED,WAASC,iBAAT,CAA2BR,CAA3B,EAA8B;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMQ,KAAK,GAAGf,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCQ,KAArD,CAF0B,CAG1B;;AACA,UAAMO,YAAY,GAAGb,KAAK,CAACc,KAAN,CAAYF,KAAZ,CAArB;AACA,UAAMG,WAAW,GAAGF,YAAY,CAACG,KAAb,EAApB,CAL0B,CAM1B;;AACAhB,IAAAA,KAAK,CAACiB,MAAN,CAAaL,KAAb,EAAoB,CAApB;AACA,QAAIM,QAAQ,GAAGlB,KAAK,CAACY,KAAD,CAApB;;AACA,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,YAAMM,QAAQ,GAAGlB,KAAK,CAACY,KAAK,GAAG,CAAT,CAAtB;AACH;;AACD,UAAMH,QAAQ,GAAGhB,cAAc,CAAC;AAACmB,MAAAA,KAAD;AAAQG,MAAAA,WAAR;AAAqBF,MAAAA,YAArB;AAAmCK,MAAAA;AAAnC,KAAD,EAA+C,eAA/C,CAA/B;AAEA,UAAMR,QAAQ,GAAGhB,WAAW,CAACe,QAAD,CAA5B;AACAR,IAAAA,gBAAgB,CAACO,IAAjB,CAAsBE,QAAtB;AACH,GA5CoB,CA8CrB;AACA;AACA;AACA;;;AAEAd,EAAAA,MAAM,CAACuB,gBAAP,CAAwB,OAAxB,EAAiCjB,WAAjC;AACAH,EAAAA,YAAY,CAACoB,gBAAb,CAA8B,OAA9B,EAAuCR,iBAAvC;AAEH,CAtDD;;AAwDA,eAAehB,UAAf","sourcesContent":["import createNode from './createNode'\nimport createSequence from './createSequence'\nimport runSequence from './runSequence'\n\n\n\nconst initialise = () => {\n\n    const button = document.querySelector(\"#appendButton\")\n    const deleteButton = document.querySelector(\"#deleteButton\")\n    const nodes = []\n    const animationHistory = []\n\n\n    // Node Structure:\n    // {\n    //     id: Number,\n    //     nodeTaget: String,\n    //     pathTarget: String\n    // }\n\n    function handleClick(e) {\n        e.preventDefault();\n        const input = document.querySelector(\"#appendValue\").value;\n        const newNode = createNode(input);\n        // Logic of action reflects the javascript implementation\n        nodes.push(newNode);\n\n        const sequence = createSequence({newNode, nodes}, 'append');\n\n        const timeline = runSequence(sequence)\n        animationHistory.push(timeline)\n    }\n\n    function handleDeleteClick(e) {\n        e.preventDefault();\n        const index = document.querySelector(\"#appendValue\").value;\n        // Finds the nodes that need to be shifted, \n        const shiftedNodes = nodes.slice(index);\n        const deletedNode = shiftedNodes.shift();\n        // Deleted node at index input\n        nodes.splice(index, 1)\n        let prevNode = nodes[index]\n        if (index !== 0) {\n            const prevNode = nodes[index - 1]\n        }\n        const sequence = createSequence({index, deletedNode, shiftedNodes, prevNode}, \"deleteByIndex\")\n\n        const timeline = runSequence(sequence)\n        animationHistory.push(timeline)\n    }\n\n    // function deleteNode(node) {\n    //     const child = document.querySelector(`#node-${node.key}`)\n    //     canvas.removeChild(child);\n    // }\n\n    button.addEventListener('click', handleClick)\n    deleteButton.addEventListener('click', handleDeleteClick)\n\n}\n\nexport default initialise;\n"]},"metadata":{},"sourceType":"module"}