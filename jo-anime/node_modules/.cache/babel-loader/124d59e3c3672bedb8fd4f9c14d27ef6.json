{"ast":null,"code":"const CURRENT = \"#current\"; // Node Structure:\n// {\n//     id: Number,\n//     nodeTaget: String,\n//     pathTarget: String\n// }\n\nfunction createSequence(newNode, nodes, type) {\n  const timeline = [];\n\n  if (type === 'append') {\n    // newNode appears\n    timeline.push({\n      targets: \"#\" + newNode.nodeTarget,\n      opacity: 1\n    }); // Current pointer appears\n\n    timeline.push({\n      targets: CURRENT,\n      opacity: 1\n    }); // Current pointer moves into position\n\n    for (const node in nodes) {\n      timeline.push({\n        targets: CURRENT,\n        translateX: node * 100\n      });\n    } // newNode goes to position above current\n\n\n    timeline.push({\n      targets: \"#\" + newNode.nodeTarget,\n      top: '37%',\n      left: (nodes.length - 1) * 100\n    }); // Current pointer disapears\n\n    timeline.push({\n      targets: CURRENT,\n      opacity: 0\n    }); // Arrow path appears\n\n    timeline.push({\n      targets: \"#\" + newNode.pathTarget,\n      opacity: 1\n    }); // Current arrow goes back to beginning\n\n    timeline.push({\n      targets: CURRENT,\n      translateX: 0,\n      duration: 1\n    });\n  }\n\n  return timeline;\n} // timeline.add({\n//     duration: 250,\n//     easing: 'easeOutExpo'\n// })\n// currentTimeline.add({\n//     targets: `#node-${input}`,\n//     opacity: 1\n// })\n// currentTimeline.add({\n//     targets: \"#current\",\n//     opacity: 1\n// })\n// nodes.forEach((node, idx) => {\n//     currentTimeline.add({\n//         targets: \"#current\",\n//         translateX: idx * 100\n//     })\n// })\n// currentTimeline.add({\n//     targets: `#node-${input}`,\n//     translateX: (nodes.length - 3) * 100 - 40,\n//     translateY: 200\n// })\n// currentTimeline.add({\n//     targets: \"#current\",\n//     opacity: 0\n// })\n// currentTimeline.add({\n//     targets: \"#current\",\n//     translateX: 0\n// })\n// function createDeleteNodeSequence(shiftedNodes, deletedNode, input) {\n//     let currentTimeline = anime.timeline({\n//         duration: 250,\n//         easing: 'easeOutExpo'\n//     })\n//     currentTimeline.add({\n//         targets: \"#current\",\n//         opacity: 1\n//     })\n//     for (let i = 0; i < input; i++) {\n//         currentTimeline.add({\n//             targets: \"#current\",\n//             translateX: i * 100\n//         })\n//     }\n//     const current = document.querySelector(\"#current\")\n//     const deletedDOM = document.querySelector(`#node-${deletedNode.key}`)\n//     currentTimeline.add({\n//         targets: [current, deletedDOM],\n//         opacity: 0\n//     })\n//     const elements = shiftedNodes.map(node => {\n//         return `#node-${node.key}`\n//     })\n//     document.querySelectorAll(elements)\n//     currentTimeline.add({\n//         targets: elements,\n//         translateX: '-=100',\n//         complete: () => deleteNode(deletedNode)\n//     })\n//     currentTimeline.add({\n//         targets: \"#current\",\n//         translateX: 0\n//     })\n// }\n\n\nexport default createSequence;","map":{"version":3,"sources":["/Users/joe/Desktop/structs/Structs.sh/jo-anime/src/createSequence.js"],"names":["CURRENT","createSequence","newNode","nodes","type","timeline","push","targets","nodeTarget","opacity","node","translateX","top","left","length","pathTarget","duration"],"mappings":"AACA,MAAMA,OAAO,GAAG,UAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,KAAjC,EAAwCC,IAAxC,EAA8C;AAE1C,QAAMC,QAAQ,GAAG,EAAjB;;AACA,MAAID,IAAI,KAAK,QAAb,EAAuB;AACnB;AACAC,IAAAA,QAAQ,CAACC,IAAT,CAAc;AACVC,MAAAA,OAAO,EAAE,MAAML,OAAO,CAACM,UADb;AAEVC,MAAAA,OAAO,EAAE;AAFC,KAAd,EAFmB,CAMnB;;AACAJ,IAAAA,QAAQ,CAACC,IAAT,CAAc;AACVC,MAAAA,OAAO,EAAEP,OADC;AAEVS,MAAAA,OAAO,EAAE;AAFC,KAAd,EAPmB,CAWnB;;AACA,SAAK,MAAMC,IAAX,IAAmBP,KAAnB,EAA0B;AACtBE,MAAAA,QAAQ,CAACC,IAAT,CAAc;AACVC,QAAAA,OAAO,EAAEP,OADC;AAEVW,QAAAA,UAAU,EAAED,IAAI,GAAG;AAFT,OAAd;AAIH,KAjBkB,CAkBnB;;;AACAL,IAAAA,QAAQ,CAACC,IAAT,CAAc;AACVC,MAAAA,OAAO,EAAE,MAAML,OAAO,CAACM,UADb;AAEVI,MAAAA,GAAG,EAAE,KAFK;AAGVC,MAAAA,IAAI,EAAE,CAACV,KAAK,CAACW,MAAN,GAAe,CAAhB,IAAqB;AAHjB,KAAd,EAnBmB,CAwBnB;;AACAT,IAAAA,QAAQ,CAACC,IAAT,CAAc;AACVC,MAAAA,OAAO,EAAEP,OADC;AAEVS,MAAAA,OAAO,EAAE;AAFC,KAAd,EAzBmB,CA6BnB;;AACAJ,IAAAA,QAAQ,CAACC,IAAT,CAAc;AACVC,MAAAA,OAAO,EAAE,MAAML,OAAO,CAACa,UADb;AAEVN,MAAAA,OAAO,EAAE;AAFC,KAAd,EA9BmB,CAkCnB;;AACAJ,IAAAA,QAAQ,CAACC,IAAT,CAAc;AACVC,MAAAA,OAAO,EAAEP,OADC;AAEVW,MAAAA,UAAU,EAAE,CAFF;AAGVK,MAAAA,QAAQ,EAAE;AAHA,KAAd;AAMH;;AAED,SAAOX,QAAP;AAEH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeJ,cAAf","sourcesContent":["\nconst CURRENT = \"#current\"\n\n// Node Structure:\n// {\n//     id: Number,\n//     nodeTaget: String,\n//     pathTarget: String\n// }\n\nfunction createSequence(newNode, nodes, type) {\n\n    const timeline = []\n    if (type === 'append') {\n        // newNode appears\n        timeline.push({\n            targets: \"#\" + newNode.nodeTarget,\n            opacity: 1\n        })\n        // Current pointer appears\n        timeline.push({\n            targets: CURRENT,\n            opacity: 1\n        })\n        // Current pointer moves into position\n        for (const node in nodes) {\n            timeline.push({\n                targets: CURRENT,\n                translateX: node * 100\n            })\n        }\n        // newNode goes to position above current\n        timeline.push({\n            targets: \"#\" + newNode.nodeTarget,\n            top: '37%',\n            left: (nodes.length - 1) * 100\n        })\n        // Current pointer disapears\n        timeline.push({\n            targets: CURRENT,\n            opacity: 0\n        })\n        // Arrow path appears\n        timeline.push({\n            targets: \"#\" + newNode.pathTarget,\n            opacity: 1\n        })\n        // Current arrow goes back to beginning\n        timeline.push({\n            targets: CURRENT,\n            translateX: 0,\n            duration: 1\n        })\n\n    }\n\n    return timeline\n\n}\n\n// timeline.add({\n//     duration: 250,\n//     easing: 'easeOutExpo'\n// })\n// currentTimeline.add({\n//     targets: `#node-${input}`,\n//     opacity: 1\n// })\n// currentTimeline.add({\n//     targets: \"#current\",\n//     opacity: 1\n// })\n// nodes.forEach((node, idx) => {\n//     currentTimeline.add({\n//         targets: \"#current\",\n//         translateX: idx * 100\n//     })\n// })\n// currentTimeline.add({\n//     targets: `#node-${input}`,\n//     translateX: (nodes.length - 3) * 100 - 40,\n//     translateY: 200\n// })\n\n// currentTimeline.add({\n//     targets: \"#current\",\n//     opacity: 0\n// })\n// currentTimeline.add({\n//     targets: \"#current\",\n//     translateX: 0\n// })\n\n\n// function createDeleteNodeSequence(shiftedNodes, deletedNode, input) {\n//     let currentTimeline = anime.timeline({\n//         duration: 250,\n//         easing: 'easeOutExpo'\n//     })\n//     currentTimeline.add({\n//         targets: \"#current\",\n//         opacity: 1\n//     })\n//     for (let i = 0; i < input; i++) {\n//         currentTimeline.add({\n//             targets: \"#current\",\n//             translateX: i * 100\n//         })\n//     }\n//     const current = document.querySelector(\"#current\")\n//     const deletedDOM = document.querySelector(`#node-${deletedNode.key}`)\n//     currentTimeline.add({\n//         targets: [current, deletedDOM],\n//         opacity: 0\n//     })\n//     const elements = shiftedNodes.map(node => {\n//         return `#node-${node.key}`\n//     })\n//     document.querySelectorAll(elements)\n//     currentTimeline.add({\n//         targets: elements,\n//         translateX: '-=100',\n//         complete: () => deleteNode(deletedNode)\n//     })\n//     currentTimeline.add({\n//         targets: \"#current\",\n//         translateX: 0\n//     })\n// }\n\nexport default createSequence"]},"metadata":{},"sourceType":"module"}