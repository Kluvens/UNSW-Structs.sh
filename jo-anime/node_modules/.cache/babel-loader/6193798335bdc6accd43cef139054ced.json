{"ast":null,"code":"import anime from 'animejs';\n\nfunction createSequence(input, nodes) {\n  let currentTimeline = anime.timeline({\n    duration: 250,\n    easing: 'easeOutExpo'\n  });\n  currentTimeline.add({\n    targets: `#node-${input}`,\n    opacity: 1\n  });\n  currentTimeline.add({\n    targets: \"#current\",\n    opacity: 1\n  });\n  nodes.forEach((node, idx) => {\n    currentTimeline.add({\n      targets: \"#current\",\n      translateX: idx * 100\n    });\n  });\n  currentTimeline.add({\n    targets: `#node-${input}`,\n    translateX: (nodes.length - 3) * 100 - 40,\n    translateY: 200\n  });\n  currentTimeline.add({\n    targets: \"#current\",\n    opacity: 0\n  });\n  currentTimeline.add({\n    targets: \"#current\",\n    translateX: 0\n  });\n} // function createDeleteNodeSequence(shiftedNodes, deletedNode, input) {\n//     let currentTimeline = anime.timeline({\n//         duration: 250,\n//         easing: 'easeOutExpo'\n//     })\n//     currentTimeline.add({\n//         targets: \"#current\",\n//         opacity: 1\n//     })\n//     for (let i = 0; i < input; i++) {\n//         currentTimeline.add({\n//             targets: \"#current\",\n//             translateX: i * 100\n//         })\n//     }\n//     const current = document.querySelector(\"#current\")\n//     const deletedDOM = document.querySelector(`#node-${deletedNode.key}`)\n//     currentTimeline.add({\n//         targets: [current, deletedDOM],\n//         opacity: 0\n//     })\n//     const elements = shiftedNodes.map(node => {\n//         return `#node-${node.key}`\n//     })\n//     document.querySelectorAll(elements)\n//     currentTimeline.add({\n//         targets: elements,\n//         translateX: '-=100',\n//         complete: () => deleteNode(deletedNode)\n//     })\n//     currentTimeline.add({\n//         targets: \"#current\",\n//         translateX: 0\n//     })\n// }\n\n\nexport default createSequence;","map":{"version":3,"sources":["/Users/joe/Desktop/structs/Structs.sh/jo-anime/src/createSequence.js"],"names":["anime","createSequence","input","nodes","currentTimeline","timeline","duration","easing","add","targets","opacity","forEach","node","idx","translateX","length","translateY"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;AAClC,MAAIC,eAAe,GAAGJ,KAAK,CAACK,QAAN,CAAe;AACjCC,IAAAA,QAAQ,EAAE,GADuB;AAEjCC,IAAAA,MAAM,EAAE;AAFyB,GAAf,CAAtB;AAIAH,EAAAA,eAAe,CAACI,GAAhB,CAAoB;AAChBC,IAAAA,OAAO,EAAG,SAAQP,KAAM,EADR;AAEhBQ,IAAAA,OAAO,EAAE;AAFO,GAApB;AAIAN,EAAAA,eAAe,CAACI,GAAhB,CAAoB;AAChBC,IAAAA,OAAO,EAAE,UADO;AAEhBC,IAAAA,OAAO,EAAE;AAFO,GAApB;AAIAP,EAAAA,KAAK,CAACQ,OAAN,CAAc,CAACC,IAAD,EAAOC,GAAP,KAAe;AACzBT,IAAAA,eAAe,CAACI,GAAhB,CAAoB;AAChBC,MAAAA,OAAO,EAAE,UADO;AAEhBK,MAAAA,UAAU,EAAED,GAAG,GAAG;AAFF,KAApB;AAIH,GALD;AAMAT,EAAAA,eAAe,CAACI,GAAhB,CAAoB;AAChBC,IAAAA,OAAO,EAAG,SAAQP,KAAM,EADR;AAEhBY,IAAAA,UAAU,EAAE,CAACX,KAAK,CAACY,MAAN,GAAe,CAAhB,IAAqB,GAArB,GAA2B,EAFvB;AAGhBC,IAAAA,UAAU,EAAE;AAHI,GAApB;AAMAZ,EAAAA,eAAe,CAACI,GAAhB,CAAoB;AAChBC,IAAAA,OAAO,EAAE,UADO;AAEhBC,IAAAA,OAAO,EAAE;AAFO,GAApB;AAIAN,EAAAA,eAAe,CAACI,GAAhB,CAAoB;AAChBC,IAAAA,OAAO,EAAE,UADO;AAEhBK,IAAAA,UAAU,EAAE;AAFI,GAApB;AAKH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeb,cAAf","sourcesContent":["import anime from 'animejs'\n\nfunction createSequence(input, nodes) {\n    let currentTimeline = anime.timeline({\n        duration: 250,\n        easing: 'easeOutExpo'\n    })\n    currentTimeline.add({\n        targets: `#node-${input}`,\n        opacity: 1\n    })\n    currentTimeline.add({\n        targets: \"#current\",\n        opacity: 1\n    })\n    nodes.forEach((node, idx) => {\n        currentTimeline.add({\n            targets: \"#current\",\n            translateX: idx * 100\n        })\n    })\n    currentTimeline.add({\n        targets: `#node-${input}`,\n        translateX: (nodes.length - 3) * 100 - 40,\n        translateY: 200\n    })\n\n    currentTimeline.add({\n        targets: \"#current\",\n        opacity: 0\n    })\n    currentTimeline.add({\n        targets: \"#current\",\n        translateX: 0\n    })\n\n}\n\n\n// function createDeleteNodeSequence(shiftedNodes, deletedNode, input) {\n//     let currentTimeline = anime.timeline({\n//         duration: 250,\n//         easing: 'easeOutExpo'\n//     })\n//     currentTimeline.add({\n//         targets: \"#current\",\n//         opacity: 1\n//     })\n//     for (let i = 0; i < input; i++) {\n//         currentTimeline.add({\n//             targets: \"#current\",\n//             translateX: i * 100\n//         })\n//     }\n//     const current = document.querySelector(\"#current\")\n//     const deletedDOM = document.querySelector(`#node-${deletedNode.key}`)\n//     currentTimeline.add({\n//         targets: [current, deletedDOM],\n//         opacity: 0\n//     })\n//     const elements = shiftedNodes.map(node => {\n//         return `#node-${node.key}`\n//     })\n//     document.querySelectorAll(elements)\n//     currentTimeline.add({\n//         targets: elements,\n//         translateX: '-=100',\n//         complete: () => deleteNode(deletedNode)\n//     })\n//     currentTimeline.add({\n//         targets: \"#current\",\n//         translateX: 0\n//     })\n// }\n\nexport default createSequence"]},"metadata":{},"sourceType":"module"}